import { type PropType } from 'vue';
import { type ValidationResult } from 'vee-validate';
/**
 * Renders a textarea together with a label, description and validation.
 */
declare const _sfc_main: import("vue").DefineComponent<{
    /**
     * The name of the field in kebab-case.
     */
    alias: {
        type: StringConstructor;
        required: true;
    };
    /**
     * The human readable name of the field.
     */
    name: {
        type: StringConstructor;
        required: true;
    };
    /**
     * The label above the field.
     */
    label: {
        type: StringConstructor;
        required: true;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    /**
     * A set of vee-validate rules.
     */
    rules: {
        type: PropType<string | Record<string, unknown>>;
        required: true;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The description below the field.
     */
    description: {
        type: StringConstructor;
        default: string;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    field: import("vee-validate").FieldContext<string>;
}, {
    currentValidation: Promise<void | ValidationResult>;
}, {}, {
    publish(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:value"[], "update:value", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * The name of the field in kebab-case.
     */
    alias: {
        type: StringConstructor;
        required: true;
    };
    /**
     * The human readable name of the field.
     */
    name: {
        type: StringConstructor;
        required: true;
    };
    /**
     * The label above the field.
     */
    label: {
        type: StringConstructor;
        required: true;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    /**
     * A set of vee-validate rules.
     */
    rules: {
        type: PropType<string | Record<string, unknown>>;
        required: true;
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The description below the field.
     */
    description: {
        type: StringConstructor;
        default: string;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
}>> & {
    "onUpdate:value"?: (...args: any[]) => any;
}, {
    value: string;
    description: string;
    placeholder: string;
    readonly: boolean;
}>;
export default _sfc_main;
