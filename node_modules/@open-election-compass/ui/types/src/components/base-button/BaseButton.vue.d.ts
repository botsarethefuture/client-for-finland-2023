import { type PropType } from 'vue';
export interface BaseButtonProps {
    tag?: 'button' | 'a';
    href?: string;
    type?: 'button' | 'submit' | 'reset';
    theme?: 'primary' | 'positive' | 'neutral' | 'negative' | 'white' | 'primary-dark' | 'transparent';
    size?: 'small' | 'normal' | 'large';
    textAlign?: 'left' | 'center';
    left?: string;
    right?: string;
    target?: string;
    disabled?: boolean;
    tabindex?: number;
}
/**
 * Renders a basic button or a-tag with support for icons, themes and sizes.
 */
declare const _sfc_main: import("vue").DefineComponent<{
    /**
     * The HTML tag to be used.
     */
    tag: {
        type: PropType<"button" | "a">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The href attribute – only applies when tag is set to `a`.
     */
    href: {
        type: StringConstructor;
        default: any;
    };
    /**
     * The type of button – only applies when tag is set to `button`.
     */
    type: {
        type: PropType<"button" | "submit" | "reset">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The global theme to be used. Can indicate the purpose of the button.
     */
    theme: {
        type: PropType<"primary" | "positive" | "neutral" | "negative" | "white" | "primary-dark" | "transparent">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The global size to be used.
     */
    size: {
        type: PropType<"small" | "normal" | "large">;
        default: string;
        validator: (value: string) => boolean;
    };
    textAlign: {
        type: PropType<"left" | "center">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The FontAwesome icon to be displayed left of the caption.
     */
    left: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The FontAwesome icon to be displayed right of the caption.
     */
    right: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The link target – only applies when tag is set to `a`.
     */
    target: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: NumberConstructor;
        default: number;
    };
}, unknown, unknown, {
    classes(): string[];
}, {
    onClick(event: MouseEvent): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * The HTML tag to be used.
     */
    tag: {
        type: PropType<"button" | "a">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The href attribute – only applies when tag is set to `a`.
     */
    href: {
        type: StringConstructor;
        default: any;
    };
    /**
     * The type of button – only applies when tag is set to `button`.
     */
    type: {
        type: PropType<"button" | "submit" | "reset">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The global theme to be used. Can indicate the purpose of the button.
     */
    theme: {
        type: PropType<"primary" | "positive" | "neutral" | "negative" | "white" | "primary-dark" | "transparent">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The global size to be used.
     */
    size: {
        type: PropType<"small" | "normal" | "large">;
        default: string;
        validator: (value: string) => boolean;
    };
    textAlign: {
        type: PropType<"left" | "center">;
        default: string;
        validator: (value: string) => boolean;
    };
    /**
     * The FontAwesome icon to be displayed left of the caption.
     */
    left: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The FontAwesome icon to be displayed right of the caption.
     */
    right: {
        type: StringConstructor;
        default: string;
    };
    /**
     * The link target – only applies when tag is set to `a`.
     */
    target: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    tabindex: {
        type: NumberConstructor;
        default: number;
    };
}>> & {
    onClick?: (...args: any[]) => any;
}, {
    type: "button" | "submit" | "reset";
    left: string;
    tag: "button" | "a";
    href: string;
    theme: "primary" | "positive" | "neutral" | "negative" | "white" | "primary-dark" | "transparent";
    size: "small" | "normal" | "large";
    textAlign: "left" | "center";
    right: string;
    target: string;
    disabled: boolean;
    tabindex: number;
}>;
export default _sfc_main;
